const problems = [
  {
    id: "two-sum",
    title: "Two Sum Variant (JS)",
    difficulty: "Easy",
    tags: ["arrays", "js"],
    prompt: "Given an array and a target, return indices of two numbers that add to target.",
    starterHtml: "",
    starterCss: "",
    starterJs: `function twoSum(nums, target){\n  // your code\n}\nconsole.log(twoSum([2,7,11,15],9));`,
  },
  {
    id: "debounce",
    title: "Implement debounce()",
    difficulty: "Easy",
    tags: ["js", "functions"],
    prompt: "Implement a debounce utility that delays invoking a function until after wait ms.",
    starterHtml: "",
    starterCss: "",
    starterJs: `function debounce(func, delay){\n  let id;\n  return (...args)=>{\n    clearTimeout(id);\n    id = setTimeout(()=>func.apply(this,args), delay);\n  };\n}\n`,
  },
  {
    id: "throttle",
    title: "Implement throttle()",
    difficulty: "Medium",
    tags: ["js", "functions"],
    prompt: "Implement throttle that ensures a function is called at most once in N ms.",
    starterHtml: "",
    starterCss: "",
    starterJs: `function throttle(func, delay){\n  let last = 0;\n  return (...args)=>{\n    const now = Date.now();\n    if(now - last >= delay){\n      last = now;\n      func.apply(this,args);\n    }\n  };\n}\n`,
  },
  {
    id: "virtualize",
    title: "List Virtualization",
    difficulty: "Hard",
    tags: ["react", "performance"],
    prompt: "Render a long list efficiently by virtualizing rows.",
    starterHtml: `<div id=app></div>`,
    starterCss: "",
    starterJs: "",
  },
  {
    id: "autocomplete",
    title: "Autocomplete Component",
    difficulty: "Medium",
    tags: ["react", "ui"],
    prompt: "Build an autocomplete input with suggestions and keyboard navigation.",
    starterHtml: "",
    starterCss: "",
    starterJs: "",
  },
  {
    id: "grid-layout",
    title: "Responsive Grid Layout",
    difficulty: "Easy",
    tags: ["css", "layout"],
    prompt: "Create a responsive grid that maintains aspect ratio cards.",
    starterHtml: `<div class=grid></div>`,
    starterCss: `.grid{display:grid;grid-template-columns:repeat(auto-fill,minmax(200px,1fr));gap:12px}`,
    starterJs: "",
  },
];

module.exports = { problems };

